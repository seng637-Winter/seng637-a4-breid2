// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class DefaultSuiteTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void loginLogoutTest() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1031, 716));
    driver.findElement(By.cssSelector(".global-header-search__level")).click();
    driver.findElement(By.cssSelector(".acl-ml--x-small:nth-child(2)")).click();
    driver.findElement(By.xpath("//acl-input-container/div[2]/div/input")).click();
    driver.findElement(By.xpath("//acl-input-container/div[2]/div/input")).sendKeys("ensf614group12@gmail.com");
    driver.findElement(By.xpath("//acl-password-container/div[2]/div/input")).sendKeys("SENG637.");
    driver.findElement(By.cssSelector(".acl-button--theme--primary")).click();
    {
      WebElement element = driver.findElement(By.linkText("Start Shopping"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.linkText("Start Shopping"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.linkText("Start Shopping")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".hdca-cms-hero-banner__content"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".button:nth-child(7) .hdca-button2__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".acl-ml--x-small:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".acl-button--theme--secondary")).click();
    {
      WebElement element = driver.findElement(By.linkText("Shower Head"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".acl-ml--x-small:nth-child(2)")).getText(), is("Account / Sign In"));
  }
  @Test
  public void loginTest() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1164, 658));
    {
      WebElement element = driver.findElement(By.linkText("Customer Support"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".acl-ml--x-small:nth-child(2)")).click();
    driver.findElement(By.xpath("//acl-input-container/div[2]/div/input")).click();
    driver.findElement(By.xpath("//acl-input-container/div[2]/div/input")).sendKeys("ensf614group12@gmail.com");
    driver.findElement(By.xpath("//acl-password-container/div[2]/div/input")).sendKeys("SENG637.");
    driver.findElement(By.cssSelector(".acl-button--theme--primary > .acl-button__label")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-button--theme--primary > .acl-button__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".acl-ml--x-small:nth-child(2)")).getText(), is("Hi SENG, My Account"));
  }
  @Test
  public void loginTestFail() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1164, 910));
    {
      WebElement element = driver.findElement(By.linkText("Customer Support"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".acl-ml--x-small:nth-child(2)")).click();
    driver.findElement(By.xpath("//acl-dropdown[@id=\'global-header-account-menu-dropdown\']/div[3]/div/global-header-account-menu-container/global-header-account-menu-guest/div/form/acl-input-container/div[2]/div/input")).click();
    driver.findElement(By.xpath("//acl-dropdown[@id=\'global-header-account-menu-dropdown\']/div[3]/div/global-header-account-menu-container/global-header-account-menu-guest/div/form/acl-input-container/div[2]/div/input")).sendKeys("ensf614group12@gmail.com");
    driver.findElement(By.xpath("//acl-dropdown[@id=\'global-header-account-menu-dropdown\']/div[3]/div/global-header-account-menu-container/global-header-account-menu-guest/div/form/acl-password-container/div[2]/div/input")).sendKeys("wrong");
    driver.findElement(By.cssSelector(".acl-button--theme--primary")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-button--theme--primary"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".acl-alert__message")).click();
    assertThat(driver.findElement(By.cssSelector(".acl-alert__message")).getText(), is("Sorry, an unexpected error has occurred. Please try again later."));
  }
  @Test
  public void removeitemfromcart() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1164, 658));
    {
      WebElement element = driver.findElement(By.cssSelector("#ValueCentreMainNavNodeContainer .acl-main-nav-item__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector("#ValueCentreMainNavNodeContainer .acl-main-nav-item__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    js.executeScript("window.scrollTo(0,766)");
    js.executeScript("window.scrollTo(0,1328)");
    driver.findElement(By.cssSelector(".slick-slide:nth-child(1) .hdca-button2__label")).click();
    driver.findElement(By.cssSelector(".acl-link:nth-child(1) > .acl-neutral-button__label > span > span:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".acl-color--title-dark")).click();
    assertThat(driver.findElement(By.cssSelector(".acl-weight--regular:nth-child(1)")).getText(), is("0 item(s)"));
  }
  @Test
  public void additemtocart() {
    driver.get("https://www.homedepot.ca/en/home.html");
    {
      WebElement element = driver.findElement(By.cssSelector("#IdeasMainNavNodeContainer .acl-main-nav-item__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.xpath("//input")).click();
    driver.findElement(By.xpath("//input")).sendKeys("wood");
    driver.findElement(By.xpath("//li[contains(.,\'wood\')]")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("#RoomMainNavNodeContainer .acl-main-nav-item__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    js.executeScript("window.scrollTo(0,1)");
    js.executeScript("window.scrollTo(0,1487)");
    driver.findElement(By.cssSelector("#ShopMainNavNode > .acl-main-nav-item__label")).click();
    driver.findElement(By.cssSelector("#acl-flyout-menu-main__focus-wrapper--l1 > .acl-flyout-category-menu-item:nth-child(1) .acl-flyout-category-menu-item__link-text")).click();
    js.executeScript("window.scrollTo(0,0)");
    driver.findElement(By.linkText("Bath")).click();
    driver.findElement(By.cssSelector(".acl-flyout-category-menu-item--first-visible-desktop .acl-flyout-category-menu-item__link-text")).click();
    driver.findElement(By.cssSelector(".acl-flyout-category-menu-item--l3:nth-child(1) .acl-flyout-category-menu-item__link-text")).click();
    js.executeScript("window.scrollTo(0,797)");
    driver.findElement(By.cssSelector(".acl-product-card:nth-child(1) > .acl-product-card__cta--bottom .acl-button__label")).click();
    js.executeScript("window.scrollTo(0,1041)");
    driver.findElement(By.cssSelector(".acl-product-card:nth-child(2) > .acl-product-card__cta--bottom .acl-button__label")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-product-card:nth-child(2) .acl-product-card__com"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".acl-button:nth-child(2) > .acl-button__label")).click();
    js.executeScript("window.scrollTo(0,30.5)");
    js.executeScript("window.scrollTo(0,935.0333251953125)");
    js.executeScript("window.scrollTo(0,976.0333251953125)");
    {
      String value = driver.findElement(By.cssSelector(".acl-select > .ng-star-inserted:nth-child(1)")).getAttribute("value");
      assertThat(value, is("1"));
    }
  }
  @Test
  public void changeMyStoretoCalgary() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1108, 831));
    driver.findElement(By.cssSelector(".acl-store-hours-menu__info-title")).click();
    driver.findElement(By.linkText("Change Store")).click();
    {
      WebElement element = driver.findElement(By.linkText("Change Store"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("default")).click();
    driver.findElement(By.id("default")).sendKeys("calgary");
    driver.findElement(By.cssSelector(".hdca-input-group__action-button-icon > svg")).click();
    driver.findElement(By.cssSelector(".hdca-store-list-item:nth-child(1) .acl-button--theme--primary > .acl-button__label")).click();
    driver.findElement(By.cssSelector(".acl-store-hours-menu__info-title")).click();
    assertThat(driver.findElement(By.cssSelector(".acl-store-info__title")).getText(), is("CALGARY COUNTRY HILLS"));
  }
  @Test
  public void chatFunctionality() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1108, 831));
    {
      WebElement element = driver.findElement(By.linkText("Customer Support"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.linkText("Customer Support")).click();
    {
      WebElement element = driver.findElement(By.linkText("Customer Support"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".styledlayoutcontainer:nth-child(2) .hdca-image__image"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".styledlayoutcontainer:nth-child(2) .hdca-button2__label"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".styledlayoutcontainer:nth-child(2) .hdca-button2__label")).click();
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".styledlayoutcontainer:nth-child(2) .hdca-button-container"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".chatContent:nth-child(1) .uiOutputRichText")));
    }
    driver.findElement(By.cssSelector(".chatContent:nth-child(1) .uiOutputRichText")).click();
    assertThat(driver.findElement(By.cssSelector(".chatContent:nth-child(1) .uiOutputRichText")).getText(), is("Welcome! I\\\'m The Home Depot Virtual Assistant."));
  }
  @Test
  public void productFiltering() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1108, 831));
    driver.findElement(By.cssSelector(".aem-GridColumn--default--none:nth-child(2) > .hdca-button-container .hdca-button2__label")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".sponsored-banner__item-image"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-ml--small .acl-image__image"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-ml--small .acl-visual-nav__link-text"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".acl-button--theme--secondary > .acl-button__label")).click();
    driver.findElement(By.xpath("//dl[2]/acl-accordion-panel/div/button/div/div")).click();
    driver.findElement(By.xpath("//label/div/span")).click();
    driver.findElement(By.cssSelector(".acl-button--size--medium")).click();
    driver.findElement(By.cssSelector(".acl-chip__label")).click();
    assertThat(driver.findElement(By.cssSelector(".acl-chip__label")).getText(), is("Nominal Thickness (in.): 1/4"));
  }
  @Test
  public void searchFunctionality() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1108, 831));
    driver.findElement(By.xpath("//input")).click();
    driver.findElement(By.xpath("//input")).sendKeys("hardwood");
    driver.findElement(By.xpath("//input")).sendKeys(Keys.ENTER);
    driver.findElement(By.cssSelector(".acl-action-button__icon > svg")).click();
    driver.findElement(By.cssSelector(".acl-display--show")).click();
    assertThat(driver.findElement(By.cssSelector(".acl-display--show")).getText(), is("Solid Hardwood Flooring"));
  }
  @Test
  public void switchwebsitetoFrench() {
    driver.get("https://www.homedepot.ca/en/home.html");
    driver.manage().window().setSize(new Dimension(1108, 831));
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-bold-hover__text:nth-child(1)"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".acl-bold-hover__text:nth-child(1)"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.linkText("Customer Support"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.linkText("Français")).click();
    {
      WebElement element = driver.findElement(By.linkText("Service à la clientèle"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    assertThat(driver.findElement(By.linkText("Pour le Pro")).getText(), is("Pour le Pro"));
  }
}
